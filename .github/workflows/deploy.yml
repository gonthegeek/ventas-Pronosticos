# Nombre del flujo de trabajo
name: Deploy React App to Firebase Hosting

# Define cuándo se ejecutará la acción
on:
  push:
    branches:
      - main  # Se ejecuta cada vez que haces push a la rama 'main'
  pull_request:
    branches:
      - main  # También en pull requests para preview

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest # Se ejecuta en un servidor virtual con Ubuntu

    steps:
      # 1. Clona tu repositorio en el servidor virtual
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura Node.js (necesario para React/Vite)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # 3. Instala las dependencias del proyecto
      - name: Install dependencies
        run: npm ci

      # 4. Construye la aplicación para producción con variables de entorno
      - name: Build React app
        run: npm run build
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}

      # 5. Despliega a Firebase Hosting
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_ADMINISTRACIONPRONOSTICOS }}'
          channelId: live
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
