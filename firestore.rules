rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/authorizedUsers/$(request.auth.uid)) &&
             (
               // New structure: role.name == 'admin'
               get(/databases/$(database)/documents/authorizedUsers/$(request.auth.uid)).data.role.name == 'admin' ||
               // Old structure: role == 'admin' 
               get(/databases/$(database)/documents/authorizedUsers/$(request.auth.uid)).data.role == 'admin' ||
               // Level-based: role.level == 3
               get(/databases/$(database)/documents/authorizedUsers/$(request.auth.uid)).data.role.level == 3
             );
    }
    
    // Helper function to check if user is supervisor or admin
    function isSupervisorOrAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/authorizedUsers/$(request.auth.uid)) &&
             (
               // New structure
               get(/databases/$(database)/documents/authorizedUsers/$(request.auth.uid)).data.role.name in ['admin', 'supervisor'] ||
               // Old structure
               get(/databases/$(database)/documents/authorizedUsers/$(request.auth.uid)).data.role in ['admin', 'supervisor'] ||
               // Level-based (supervisor=2, admin=3)
               get(/databases/$(database)/documents/authorizedUsers/$(request.auth.uid)).data.role.level >= 2
             );
    }
    
    // Helper function to check if user is authorized
    function isAuthorizedUser() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/authorizedUsers/$(request.auth.uid)) &&
             (
               get(/databases/$(database)/documents/authorizedUsers/$(request.auth.uid)).data.isActive == true ||
               get(/databases/$(database)/documents/authorizedUsers/$(request.auth.uid)).data.active == true
             );
    }
    
    // Users collection (new structure)
    match /users/{userId} {
      // Admins can read, create, update, delete any user
      allow read, write: if isAdmin();
      
      // Users can only read their own profile
      allow read: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Authorized Users collection - only admins can manage
    match /authorizedUsers/{userId} {
      // Admins can read, create, update, delete any user
      allow read, write: if isAdmin();
      
      // Users can only read their own profile
      allow read: if isAuthenticated() && request.auth.uid == userId;
      
      // Allow initial user creation (for first admin setup) 
      allow create: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Sales data - hierarchical structure: data/sales/{year}/{month}/{day}/{salesRecord}
    match /data/sales/{document=**} {
      allow read: if isAuthorizedUser();
      allow write: if isAuthorizedUser();
    }
    
    // Backward compatibility - old sales structure
    match /sales/{document=**} {
      allow read: if isAuthorizedUser();
      allow write: if isAuthorizedUser();
    }
    
    // Artifacts collection (legacy backup data)
    match /artifacts/{document=**} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
    
    // Legacy data paths for migration
    match /legacy/{document=**} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
    
    // Backup data paths
    match /backup/{document=**} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
    
    // Hourly sales data
    match /hourlySales/{document=**} {
      allow read, write: if isAuthorizedUser();
    }
    
    // Daily sales data 
    match /dailySales/{document=**} {
      allow read, write: if isAuthorizedUser();
    }
    
    // Lottery/Tickets data
    match /tickets/{document=**} {
      allow read: if isAuthorizedUser();
      allow write: if isAuthorizedUser();
    }
    
    // Reports data - supervisors and admins can access
    match /reports/{document=**} {
      allow read: if isSupervisorOrAdmin();
      allow write: if isSupervisorOrAdmin();
    }
    
    // Commission data - supervisors and admins
    // Top-level (legacy or tooling)
    match /commissions/{document=**} {
      allow read: if isSupervisorOrAdmin();
      allow write: if isSupervisorOrAdmin();
    }

    // Hierarchical structure (current): data/commissions/{year}/{month}/entries/{id}
    match /data/commissions/{document=**} {
      allow read: if isSupervisorOrAdmin();
      allow write: if isSupervisorOrAdmin();
    }
    
    // Paid prizes data - hierarchical structure: data/paidPrizes/{year}/{month}/entries/{id}
    match /data/paidPrizes/{document=**} {
      allow read: if isSupervisorOrAdmin();
      allow write: if isSupervisorOrAdmin();
    }
    
    // Inventory data
    match /inventory/{document=**} {
      allow read: if isAuthorizedUser();
      allow write: if isSupervisorOrAdmin();
    }
    
    // Admin-only collections
    match /admin/{document=**} {
      allow read, write: if isAdmin();
    }
    
    // System configuration
    match /config/{document=**} {
      allow read: if isAuthorizedUser();
      allow write: if isAdmin();
    }
  }
}
